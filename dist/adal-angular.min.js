"use strict";if("undefined"!=typeof module&&module.exports){var window,localStorage,angular,document,AuthenticationContext;module.exports.inject=function(e,t,o,n,r,i){window=e,localStorage=t,document=o,Math=n,angular=r,AuthenticationContext=i}}!function(){if(angular){var e=angular.module("AdalAngular",[]);e.provider("adalAuthenticationService",function(){var e=null,t={isAuthenticated:!1,userName:"",loginError:"",profile:""},o=function(o){var n=e.getCachedToken(o);t.isAuthenticated=null!==n&&n.length>0;var r=e.getCachedUser()||{userName:""};t.userName=r.userName,t.profile=r.profile,t.loginError=e.getLoginError()};this.init=function(t,n){if(!t)throw new Error("You must set configOptions, when calling init");var r=window.location.hash,i=window.location.href;r&&(i=i.replace(r,"")),t.redirectUri=t.redirectUri||i,t.postLogoutRedirectUri=t.postLogoutRedirectUri||i,n&&n.interceptors&&n.interceptors.push("ProtectedResourceInterceptor"),e=new AuthenticationContext(t),o(e.config.loginResource)},this.$get=["$rootScope","$window","$q","$location","$timeout",function(n,r,i,a,c){function u(e,t){return t.requireADLogin?e.requireADLogin!==!1:!!e.requireADLogin}var s=function(){var i=r.location.hash;if(e.isCallback(i)){var u=e.getRequestInfo(i);if(e.saveTokenFromHash(u),a.$$html5?r.location=r.location.origin+r.location.pathname:r.location.hash="",u.requestType!==e.REQUEST_TYPE.LOGIN&&(e.callback=r.parent.AuthenticationContext().callback),u.stateMatch)if("function"==typeof e.callback){if(u.requestType===e.REQUEST_TYPE.RENEW_TOKEN){if(u.parameters.access_token)return void e.callback(e._getItem(e.CONSTANTS.STORAGE.ERROR_DESCRIPTION),u.parameters.access_token);if(u.parameters.id_token)return void e.callback(e._getItem(e.CONSTANTS.STORAGE.ERROR_DESCRIPTION),u.parameters.id_token)}}else o(e.config.loginResource),t.userName?(c(function(){o(e.config.loginResource),n.userInfo=t;var r=e._getItem(e.CONSTANTS.STORAGE.START_PAGE);r&&a.path(r)},1),n.$broadcast("adal:loginSuccess")):n.$broadcast("adal:loginFailure",e._getItem(e.CONSTANTS.STORAGE.ERROR_DESCRIPTION))}else o(e.config.loginResource),e._renewActive||t.isAuthenticated||!t.userName||e._getItem(e.CONSTANTS.STORAGE.FAILED_RENEW)||e.acquireToken(e.config.loginResource,function(e,o){e?n.$broadcast("adal:loginFailure","auto renew failure"):o&&(t.isAuthenticated=!0)});c(function(){o(e.config.loginResource),n.userInfo=t},1)},l=function(){e._logstatus("Login event for:"+a.$$path),e.config&&e.config.localLoginUrl?a.path(e.config.localLoginUrl):(e._saveItem(e.CONSTANTS.STORAGE.START_PAGE,a.$$path),e._logstatus("Start login at:"+window.location.href),n.$broadcast("adal:loginRedirect"),e.login())},g=function(o,n){n&&n.$$route&&u(n.$$route,e.config)&&(t.isAuthenticated||(e._logstatus("Route change event for:"+a.$$path),l()))},f=function(o,n){n&&u(n,e.config)&&(t.isAuthenticated||(e._logstatus("State change event for:"+a.$$path),l()))};return n.$on("$routeChangeStart",g),n.$on("$stateChangeStart",f),n.$on("$locationChangeStart",s),o(e.config.loginResource),n.userInfo=t,{config:e.config,login:function(){e.login()},loginInProgress:function(){return e.loginInProgress()},logOut:function(){e.logOut()},getCachedToken:function(t){return e.getCachedToken(t)},userInfo:t,acquireToken:function(t){var o=i.defer();return e.acquireToken(t,function(t,n){t?(e._logstatus("err :"+t),o.reject(t)):o.resolve(n)}),o.promise},getUser:function(){var t=i.defer();return e.getUser(function(o,n){o?(e._logstatus("err :"+o),t.reject(o)):t.resolve(n)}),t.promise},getResourceForEndpoint:function(t){return e.getResourceForEndpoint(t)},clearCache:function(){e.clearCache()},clearCacheForResource:function(t){e.clearCacheForResource(t)}}}]}),e.factory("ProtectedResourceInterceptor",["adalAuthenticationService","$q","$rootScope",function(e,t,o){return{request:function(o){if(o){o.headers=o.headers||{};var n=e.getResourceForEndpoint(o.url),r=e.getCachedToken(n),i=!1;if(r)return o.headers.Authorization="Bearer "+r,o;if(e.config)for(var a in e.config.endpoints)o.url.indexOf(a)>-1&&(i=!0);if(e.loginInProgress())return t.reject();if(e.config&&i){var c=t.defer();return e.acquireToken(n).then(function(e){o.headers.Authorization="Bearer "+e,c.resolve(o)},function(e){c.reject(e)}),c.promise}return o}},responseError:function(n){if(n&&401===n.status){var r=e.getResourceForEndpoint(n.config.url);e.clearCacheForResource(r),o.$broadcast("adal:notAuthorized",n,r)}return t.reject(n)}}}])}else console.error("Angular.JS is not included")}();